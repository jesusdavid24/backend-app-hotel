// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                   String    @id @default(auto()) @map("_id") @db.ObjectId
  identificationNumber String
  firstName            String
  lastName             String
  email                String    @unique
  password             String
  phone                String
  isActive             Boolean   @default(true)
  isDeleted            Boolean   @default(false)
  recoveryToken        String?
  booking              Booking[]
  Role                 Role      @relation(fields: [roleId], references: [id])
  roleId               String    @db.ObjectId
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
}

model PotencialUser {
  id                   String   @id @default(auto()) @map("_id") @db.ObjectId
  identificationNumber String
  firstName            String
  lastName             String
  email                String   @unique
  isDeleted            Boolean  @default(false)
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
}

model Role {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String @unique
  User User[]
}

model Booking {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  checkInDate  DateTime
  checkOutDate DateTime
  source       String
  createBy     String
  User         User     @relation(fields: [userId], references: [id])
  userId       String   @db.ObjectId
  status       String   @default("Pending")
  Room         Room     @relation(fields: [roomId], references: [id])
  roomId       String   @db.ObjectId
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Room {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  imagesUrl   String[]
  description String
  isDeleted   Boolean   @default(false)
  Booking     Booking[]
  Amenity     Amenity   @relation(fields: [amenityId], references: [id])
  amenityId   String[]  @db.ObjectId
  Rule        Rule      @relation(fields: [ruleId], references: [id])
  ruleId      String[]  @db.ObjectId
  RoomType    RoomType  @relation(fields: [roomTypeId], references: [id])
  roomTypeId  String[]  @db.ObjectId
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model RoomType {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  room Room[]
}

model Amenity {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  iconUrl   String
  isDeleted Boolean  @default(false)
  room      Room[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Rule {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  isDeleted   Boolean  @default(false)
  room        Room[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
