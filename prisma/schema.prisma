// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String    @unique
  password  String
  phone     String
  isActive  Boolean   @default(false)
  isDeleted Boolean   @default(false)
  role      Role
  booking   Booking[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

enum Role {
  ADMIN
  CLIENT
}

model Booking {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  checkInDate   DateTime
  checkOutDate  DateTime
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  User          User          @relation(fields: [userId], references: [id])
  userId        String        @db.ObjectId
  room          Room[]
  bookingStatus BookingStatus
}

enum BookingStatus {
  CONFIRMED
  CANCELLED
  PENDING
}

model Room {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  image       String
  description String
  isDeleted   Boolean  @default(false)
  Booking     Booking  @relation(fields: [bookingId], references: [id])
  bookingId   String   @db.ObjectId
  Amenity     Amenity  @relation(fields: [amenityId], references: [id])
  amenityId   String[] @db.ObjectId
  Rule        Rule     @relation(fields: [ruleId], references: [id])
  ruleId      String[] @db.ObjectId
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Amenity {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  room Room[]
}

model Rule {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  room Room[]
}
